---
import BaseLayout from '../layouts/BaseLayout.astro';
import { SITE_TITLE } from '../consts';
---

<BaseLayout title="Contact" description="Get in touch with Big Bussy">
  <main>
    <section class="hero">
      <div class="container">
        <h1>Let's Connect! ðŸ’Œ</h1>
        <p>I'd love to hear from you. Send me a message and I'll get back to you as soon as possible.</p>
      </div>
    </section>

    <section class="contact-section">
      <div class="container">
        <div class="contact-grid">
          <div class="contact-info">
            <h2>Quick Info</h2>
            <div class="info-item">
              <i class="fas fa-map-marker-alt" aria-hidden="true"></i>
              <div>
                <h3>Location</h3>
                <p>Reno, Nevada</p>
              </div>
            </div>
            <div class="info-item">
              <i class="fas fa-clock" aria-hidden="true"></i>
              <div>
                <h3>Response Time</h3>
                <p>Usually within 24 hours</p>
              </div>
            </div>
            <div class="info-item">
              <i class="fas fa-envelope" aria-hidden="true"></i>
              <div>
                <h3>Email</h3>
                <a href="mailto:justin@bigbussy.com" class="email-link">justin@bigbussy.com</a>
              </div>
            </div>
          </div>

          <form class="contact-form" action="/api/contact" method="POST">
            <div class="form-group">
              <label for="name">Name</label>
              <input
                type="text"
                id="name"
                name="name"
                placeholder="What should I call you?"
                required
                aria-required="true"
              />
            </div>

            <div class="form-group">
              <label for="email">Email</label>
              <input
                type="email"
                id="email"
                name="email"
                placeholder="Where can I reach you?"
                required
                aria-required="true"
              />
            </div>

            <div class="form-group">
              <label for="message">Message</label>
              <textarea
                id="message"
                name="message"
                placeholder="What's on your mind?"
                required
                aria-required="true"
                minlength="10"
              ></textarea>
            </div>

            <button type="submit" class="submit-button">
              <span class="button-text">Send Message</span>
              <span class="button-icon" aria-hidden="true">
                <i class="fas fa-paper-plane"></i>
              </span>
            </button>
          </form>
        </div>
      </div>
    </section>
  </main>
</BaseLayout>

<style>
  .contact-section {
    padding: 2rem 1rem;
  }

  .container {
    max-width: 1200px;
    margin: 0 auto;
    padding: 0 1rem;
  }

  .contact-grid {
    display: grid;
    gap: 2rem;
    margin-top: 2rem;
  }

  .contact-info {
    background: var(--color-bg);
    padding: 2rem;
    border-radius: 1rem;
    box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
  }

  .contact-info h2 {
    color: var(--color-secondary);
    margin-bottom: 1.5rem;
    font-size: 1.75rem;
  }

  .info-item {
    display: flex;
    align-items: flex-start;
    gap: 1rem;
    margin-bottom: 1.5rem;
  }

  .info-item i {
    color: var(--color-primary);
    font-size: 1.5rem;
    margin-top: 0.25rem;
  }

  .info-item h3 {
    color: var(--color-text);
    margin-bottom: 0.25rem;
    font-size: 1.1rem;
  }

  .info-item p {
    color: var(--color-text);
    opacity: 0.8;
  }

  .email-link {
    color: var(--color-primary);
    text-decoration: none;
    transition: color 0.2s;
  }

  .email-link:hover {
    color: var(--color-secondary);
  }

  .contact-form {
    background: var(--color-bg);
    padding: 2rem;
    border-radius: 1rem;
    box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
  }

  .form-group {
    margin-bottom: 1.5rem;
  }

  .form-group label {
    display: block;
    margin-bottom: 0.5rem;
    color: var(--color-text);
    font-weight: 500;
  }

  .form-group input,
  .form-group textarea {
    width: 100%;
    padding: 0.75rem;
    border: 2px solid var(--color-border);
    border-radius: 0.5rem;
    background: white;
    transition: all 0.2s;
  }

  .form-group input:focus,
  .form-group textarea:focus {
    outline: none;
    border-color: var(--color-primary);
    box-shadow: 0 0 0 3px rgba(255, 105, 180, 0.1);
  }

  .form-group textarea {
    min-height: 150px;
    resize: vertical;
  }

  .submit-button {
    display: inline-flex;
    align-items: center;
    gap: 0.5rem;
    background: var(--color-primary);
    color: white;
    padding: 0.75rem 1.5rem;
    border: none;
    border-radius: 0.5rem;
    font-weight: 600;
    cursor: pointer;
    transition: all 0.2s;
  }

  .submit-button:hover {
    background: var(--color-secondary);
    transform: translateY(-2px);
  }

  .submit-button:focus {
    outline: none;
    box-shadow: 0 0 0 3px rgba(255, 105, 180, 0.3);
  }

  .button-icon {
    display: flex;
    align-items: center;
  }

  @media (min-width: 768px) {
    .contact-grid {
      grid-template-columns: 1fr 2fr;
    }

    .contact-section {
      padding: 4rem 1rem;
    }
  }

  /* Accessibility improvements */
  .form-group input:focus-visible,
  .form-group textarea:focus-visible,
  .submit-button:focus-visible {
    outline: 2px solid var(--color-primary);
    outline-offset: 2px;
  }

  .submit-button:disabled {
    opacity: 0.7;
    cursor: not-allowed;
  }

  /* Loading state */
  .submit-button.loading .button-text {
    opacity: 0;
  }

  .submit-button.loading .button-icon {
    animation: spin 1s linear infinite;
  }

  @keyframes spin {
    from { transform: rotate(0deg); }
    to { transform: rotate(360deg); }
  }
</style>

<script>
  // Contact form handling
  const form = document.getElementById('contact-form');
  if (form) {
    form.addEventListener('submit', async (e) => {
      e.preventDefault();
      
      const formData = new FormData(form);
      const data = Object.fromEntries(formData.entries());
      
      try {
        // TODO: Replace with your actual API endpoint
        const response = await fetch('/api/contact', {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json',
          },
          body: JSON.stringify(data),
        });
        
        if (response.ok) {
          alert('Message sent successfully! I\'ll get back to you soon. ðŸŽ‰');
          form.reset();
        } else {
          throw new Error('Message sending failed');
        }
      } catch (error) {
        alert('Something went wrong. Please try again later.');
      }
    });
  }
</script> 